name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_TAGS: "${{ vars.DOCKER_REGISTRY }}/backend/panel:latest,${{ vars.DOCKER_REGISTRY }}/backend/panel:${{ github.ref_name }}-latest,${{ vars.DOCKER_REGISTRY }}/backend/panel:${{ github.ref_name }}-${{ github.sha }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.0.0
      with:
        build-args: ""
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: Exchange
        outputs: type=docker,dest=/tmp/backend-panel.tar
        tags: ${{ env.DOCKER_IMAGE_TAGS }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-panel
        path: /tmp/backend-panel.tar
        retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-panel
          path: /tmp
      - name: Load Docker image
        run: docker load -i /tmp/backend-panel.tar
      - name: Run tests
        run: |
          docker run --rm \
            -e DATABASE_HOST=postgres \
            -e DATABASE_PORT=5432 \
            -e DATABASE_NAME=testdb \
            -e DATABASE_USER=postgres \
            -e DATABASE_PASSWORD=postgres \
            -e DJANGO_SECRET_KEY=secret \
            -e DJANGO_DEBUG=True \
            -e DJANGO_ALLOWED_HOSTS=localhost \
            backend/panel:latest \
            python manage.py test

  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-panel
          path: /tmp
      - name: Load Docker image
        run: docker load -i /tmp/backend-panel.tar
      - name: Push to the registry
        uses: docker/build-push-action@v5.0.0
        with:
          context: Exchange
          push: true
          tags: ${{ env.DOCKER_IMAGE_TAGS }}
